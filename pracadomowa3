# -------------------------------------------------------- 

# 

# Imię: Jowita 

# Nazwisko: Kwiatkowska 

# Numer albumu: 30332 

# 

# -------------------------------------------------------- 

# Zadanie.12  

# 

# W R dostępne są zbiory WWWusage, presidents oraz mdeaths. Wczytaj je i dokonaj eksploracji danych. 

# Sprawdź czy są to zbiory typu "time series". Opisz jakich okresów dotyczą dane oraz jakim okresom  

# czasu odpowiadają poszczególne obserwacje. Sporządź również wykresy liniowe obrazujące te szeregi czasowe. 

# 

# Pełne rozwiązanie tego zadania musi zawierać dla każdego zbioru:  

#	- Twój kod R,  

#	- Twój opis i interprację szeregów czasowych, 

#   - czytelną wizualizację na wykresach.  

# 

# -------------------------------------------------------- 

# tu wpisz swój kod: 

 

 

# Zbiór 'WWWusage' 

  

datawww = WWWusage 

  

wwwWykres = plot(datawww, main = 'wwwUsage', xlab = 'czas[min]', ylab = 'liczba osób połączonych z internetem') 

is.ts(datawww) 

  

# Zbiór WWWusage jest zbiorem typu 'time series' 

# Wykres ten prezentuje liczbę osób połączonych z internetem przez serwer w każdej minucie 

  

# Zbiór 'datapresidents' 

  

datapresidents = presidents 

  

datapresidents 

is.ts(datapresidents) 

  

# Zbiór 'presidents' jest zbiorem typu 'time series' 

# Prezentuje procentowo poparcie dla prezydentów USA mierzone w każdym kwartale w latach 1945 - 1974 

  

presidentsWykres = plot(datapresidents, main = 'Poparcie prezydentów USA', xlab = 'Rok', ylab = 'Poparcie [%]')  

  

# Przerwanie linii wykresu oznacza brak danych 'NA' 

  

# Zbiór 'mdeaths' 

  

datadeaths = mdeaths 

  

datadeaths 

is.ts(datadeaths) 

  

# Zbiór 'mdeaths jest zbiorem typu 'time series' 

# Prezentuje ilość śmierci mężczyzn w UK na: zapalenie oskrzeli, rozedmę lub astmę z wartościami mierzonymi co miesiąc w latach 1974 - 1978 

  

mdeathsWykres = plot(datadeaths, main = 'Śmierci mężczyn na choroby płuc w UK', xlab = 'Rok', ylab = 'Ilość zgonów') 

 

 

# -------------------------------------------------------- 

# Zadanie.13 

# 

# Dostępny jest zbiór danych prezentujących liczbę małżeństw (v1). Prezentuje on dane za okres od stycznia 

# 2009 do grudnia 2011. Dokonaj jego dekompozycji. Wybierz właściwy typ modelu wahań w czasie. Wykreśl wyniki. Odpowiedz na pytania: 

# 

# W których miesiącach jest najwyższy dodatni poziom wahań sezonowych,  

# a w których jest najniższy? Uzasadnij odpowiedź i zinterpretuj wyniki. 

#   

# O ile procent w każdym miesiącu wskaźniki sezonowości odchylają się od średniej dla danego miesiąca? 

# 

# -------------------------------------------------------- 

# tu wpisz swój kod:  

  

	v1 <-  c(10.8, 12.9, 4.7, 28.1, 6.1, 23.1, 20.2, 23.7, 30.4, 24.6, 7.7, 14.8, 

			   10.2, 10.9, 4.9, 27.3, 6.0, 27.6, 16.7, 28.3, 26.7, 24.8, 8.2, 12.9, 

				9.8,  7.9, 8.1, 25.7, 6.3, 25.2, 18.8, 29.6, 26.2, 26.1, 8.3, 12.9) 

 

 

time_series <- ts(v1, start = c(2009, 1), frequency = 12) 

 

decomposition <- decompose(ts_v1)  

 

par(mfrow = c(4, 1)) plot(time_series, main = "Szeregi czasowe", ylab = "Liczba małżeństw") plot(decomposition$seasonal, main = "Składowa sezonowa", ylab = "Sezonowość") plot(decomposition$trend, main = "Trend", ylab = "Trend") plot(decomposition$random, main = "Reszta", ylab = "Reszta")  

 

max_seasonal_index <- which.max(decomposition$seasonal) cat("Najwyższy dodatni poziom wahań sezonowych występuje w miesiącu:", month.abb[max_seasonal_index], "\n") #dla obecnego przykładu będzie to czerwiec 

 

min_seasonal_index <- which.min(decomposition$seasonal) cat("Najniższy poziom wahań sezonowych występuje w miesiącu:", month.abb[min_seasonal_index], "\n") #dla obecnego przykładu będzie do kwiecień 

 

percent_deviation <- (decomposition$seasonal / decomposition$seasonal[1]) * 100 cat("Procentowe odchylenie od średniej dla każdego miesiąca:\n") print(percent_deviation) 

 

# Procentowe odchylenie od średniej dla każdego miesiąca: [1] 0.0000000 8.3333333 -1.3888889 23.6111111 -8.3333333 15.2777778 [7] 8.3333333 12.5000000 26.3888889 19.4444444 -6.9444444 2.7777778 [13] 0.0000000 8.3333333 -1.3888889 21.5277778 -8.3333333 19.4444444 [19] 7.6388889 23.6111111 20.8333333 16.6666667 -5.5555556 8.3333333 [25] -3.4722222 -5.5555556 -2.7777778 17.3611111 -6.9444444 16.6666667 [31] 8.3333333 25.0000000 21.5277778 21.1805556 -5.2083333 8.3333333 
 

 

# -------------------------------------------------------- 

# Zadanie.14 

# 

# W pakiecie ISLR dostępny jest zbiór "Auto "z informacją o różnych modelach samochodów. 

# Zapoznaj się ze znaczeniem zmiennych zbioru. Dokonaj eksploracji zbioru za pomocą 

# poznanych funkcji (np. head, summary, itd.). 

# 

# Utwórz model1 regresji liniowej ze zmienną mpg jako objaśnianą a horsepower jako objaśniającą. 

# Zastanów się co zawierają zmienne i czy istnieje związek przyczynowo-skutkowy.  

# Zinterpretuj zmienne i uzasadnij związek. 

#  

# Dokonaj analizy parametrów modelu za pomocą funkcji summary(). Na podstawie je wyników odpowiedz  

# na następujace pytania: 

# a) Czy istnieje związek pomiędzy zmienną objaśniającą a objaśnianą? 

# b) Jak można interpretować wartość współczynnika regresji? 

# c) Jaką liczbę mil per galon paliwa model przewiduje dla 98 koni mechanicznych?  

# {wskazówka: użyj funkcji predict z argumentem interval="conficence" 

# d) utwórz wykres rozrzutu dla tych dwóch zmiennych; dodaj linię regresji za pomocą funkcji "abline" 

# e) użyj funkcji "plot", żeby obejrzeć wykresy diagnostyczne 

# 

# Spróbuj stworzyć model dla większej liczby zmiennych.  

# Najpierw stwórz macierz korelacji dla zmiennych numerycznych używająch funkcji cor().  

# (pamiętaj, że w argumencie funkcji cor powinny być dane bez zmiennych kategorycznych) 

# f) które zmienne numeryczne są silnie skorelowane ze zmienną objaśnianą? 

# 

# Stwórz teraz model2 oparty na wszystkich zmiennych. 

# g) Które zmienne są powiązane ze zmienną objaśnianą (mpg) w statystycznie istotnym stopniu? 

# h) Jak można interpretować współczynnik przy zmiennej "year"? 

# 

# Porównaj modele ze względu na wartość R kwadrat  

# i stwórz wykresy diagnostyczne dla obu modeli. 

  

	?Auto 

  

# 

# -------------------------------------------------------- 

# tu wpisz swój kod:  

  

#a) 

install.packages('ISLR') 

library(ISLR) 

data(Auto) 

summary(Auto) 

View(Auto) 

  

model1 = lm(mpg ~ horsepower, data = Auto) 

summary(model1)  

  

#c), d), e) 

predict(model1, newdata = data.frame(horsepower = 98), interval = "confidence") # około 24.5 mpg 

plot(Auto$horsepower, Auto$mpg)  

abline(model1) #istnieje zależność im wyższa moc silika, tym niższy dystans pokonany na galonie paliwa 

  

#f), g), h) 

cor_matrix = cor(Auto[, sapply(Auto, is.numeric)]) 

model2 = lm(mpg ~ ., data = Auto) 

 

 

plot(Auto$cylinders, Auto$mpg) # brak zależności 

plot(Auto$displacement, Auto$mpg) # istnieje zależność im wyższy 'displacement', tym niższy dystans pokonany na galonie paliwa 

plot(Auto$weight, Auto$mpg) # istnieje zależność im wyższa masa, tym niższy dystans pokonany na galonie paliwa 

plot(Auto$acceleration, Auto$mpg) # brak zależności 

plot(Auto$year, Auto$mpg) # brak zależności 

plot(Auto$origin, Auto$mpg) # brak zależności 

 

 

# -------------------------------------------------------- 

# Zadanie.15 

# 

# Wygeneruj 1000-elementowy wektor z rozkładu Poisonna z parametrem lambda=6. Policz dla tego wektora: 

# - średnią,  

# - rozstęp,  

# - wariancję,  

# - kwartyle,  

# - rozstęp międzykwartylowy,  

# - kurtozę,  

# - skośność , 

# - oraz dominantę. 

# Zwizualizuj wektor za pomocą histogramu oraz wykresu pudełkowego (użyj kolorów, ustaw tytuły osi, wykresu). 

# Jak mają się do siebie średnia, mediana i dominanta? 

# Wygeneruj ponownie losowy wektor (korzystając z tej samej komendy) i uruchom ponownie napisane komendy.  

# Czy są wyraźne różnice? 

# 

# -------------------------------------------------------- 

# tu wpisz swój kod: 

 

 

install.packages("moments") 

library(moments) 

set.seed(123) 

  

data = rpois(1000, lambda = 6) 

  

srednia = mean(data) # 5.967 

zakres = range(data) #[0 : 15] 

wariancja = var(data) # 5.89 

kwartyle = quantile(data) # 0%  25%  50%  75% 100%  

                          # 0    4    6    8   15  

rozstep = IQR(data) # 4 

kurtoza = kurtosis(data) # 3.05 

skosnosc = skewness(data) # 0.3775796 

dominanta = as.numeric(names(which.max(table(data)))) # 5 

mediana = median(data) # 6 

  

# średnia i mediana są do siebie bardzo zbliżone, lecz dominanta jest niższa 

  

hist(data, col = "green", main = 'Histogram', ylab = 'Ilość wystąpień', xlab = "Liczba") 

boxplot(data, col = "yellow", main = 'Boxplot') 

  

data2 = rpois(1000, lambda = 6) 

  

srednia2 = mean(data2) # 5.984 

dominanta2 = as.numeric(names(which.max(table(data2)))) # 6 

mediana2 = median(data2) # 6 

# Różnice występują, ale nieznaczne 

 
